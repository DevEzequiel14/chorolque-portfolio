---
export interface Props {
    images: string[];
}
const { images } = Astro.props;
---

<div class="carousel">
    <div class="carousel__track" id="carousel-track">
        {
            images.map((image, index) => (
                <div
                    class="carousel__item"
                    style={`background-image: url('${image}')`}
                />
            ))
        }
    </div>

    <button class="carousel__button carousel__button--prev" id="prev-btn"
        >‹</button
    >
    <button class="carousel__button carousel__button--next" id="next-btn"
        >›</button
    >
</div>

<script is:inline>
    (() => {
        let currentIndex = 0;
        const track = document.getElementById("carousel-track");
        const total = track?.children.length || 0;
        const prevBtn = document.getElementById("prev-btn");
        const nextBtn = document.getElementById("next-btn");

        function updateCarousel() {
            if (track) {
                track.style.transform = `translateX(-${currentIndex * 100}%)`;
            }
        }

        prevBtn?.addEventListener("click", () => {
            currentIndex = (currentIndex - 1 + total) % total;
            updateCarousel();
        });

        nextBtn?.addEventListener("click", () => {
            currentIndex = (currentIndex + 1) % total;
            updateCarousel();
        });

        updateCarousel();
    })();
</script>
